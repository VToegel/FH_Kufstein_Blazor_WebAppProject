@page "/editcontainerdata"
@page "/editcontainerdata/{Id:int}"
@inject NavigationManager _NavigationManager
@inject ContainerDataClient Client
@inject ContainerTypeClient ContainerTypeClient
@rendermode InteractiveServer

<PageTitle>@title</PageTitle> @* change title to project name *@

<h3>@title</h3> @* change header to project name *@

@if (containerTypes is null || containerDetails is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-4">
            <EditForm Model="@containerDetails" FormName="editContainer" OnValidSubmit="OnValidSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="mb-3">
                    <label for="name" class="form-label">Container Name:</label>
                    <InputText id="name" @bind-Value="containerDetails.Name" class="form-control" />
                    <ValidationMessage For="() => containerDetails.Name" />
                </div>
                <div class="mb-3">
                    <label for="containerType" class="form-label">Container Type:</label>
                    <InputSelect id="containerType" @bind-Value="containerDetails.ContainerTypeId" class="form-select">
                        <option value="">Select Container Type</option>

                        @foreach (var containerType in containerTypes)
                        {
                            <option value="@containerType.Id">@containerType.Name</option>
                        }

                    </InputSelect>
                    <ValidationMessage For="() => containerDetails.ContainerTypeId" />
                </div>
                <div class="mb-3">
                    <label for="location" class="form-label">Container Location:</label>
                    <InputText id="location" @bind-Value="containerDetails.Location" class="form-control" />
                </div>
                <div class="mb-3">
                    <label for="capacity" class="form-label">Container Capacity:</label>
                    <InputNumber id="capacity" @bind-Value="containerDetails.Capacity" class="form-control" />
                    <ValidationMessage For="() => containerDetails.Capacity" />
                </div>
                <div class="mb-3">
                    <label for="currentLevel" class="form-label">Current Container Level:</label>
                    <InputNumber id="currentLevel" @bind-Value="containerDetails.CurrentLevel" class="form-control" />
                    <ValidationMessage For="() => containerDetails.CurrentLevel" />
                </div>
                <div class="mb-3">
                    <label for="dateTime" class="form-label">Date / Time:</label>
                    <InputDate id="dateTime" @bind-Value="containerDetails.DateTime" class="form-control" />
                </div>
                <button type="submit" class="btn btn-primary">Submit</button>
                <a role="button" class="btn btn-secondary" href="/">Cancel</a>
            </EditForm>
        </div>
    </div>
}
@code
{
    [Parameter]
    public int? Id { get; set; }

    private string title = string.Empty;

    [SupplyParameterFromForm]
    private ContainerDetails? containerDetails { get; set; }

    private ContainerType[]? containerTypes;

    protected override void OnParametersSet()
    {
        if (containerDetails is not null)
        {
            return;
        }

        base.OnParametersSet();
        if (Id.HasValue)
        {
            containerDetails = Client.GetContainerData(Id.Value);
            title = $"Edit {containerDetails.Name}";
        }
        else
        {

            containerDetails = new() @* create new instance of ContainerData *@
            {
                Name = string.Empty,
                Location = string.Empty,
                DateTime = DateTime.Now,
            };
            title = "Add Container Data";
        }
    }

    protected override void OnInitialized()
    {
        containerTypes = ContainerTypeClient.GetContainerTypes();
    }

    private void OnValidSubmit()
    {
        ArgumentNullException.ThrowIfNull(containerDetails);

        if (Id is null)
        {
            Client.AddContainerData(containerDetails);
        }
        else
        {
            containerDetails.Id = Id.Value; //get the value of Id
            Client.UpdateContainerData(containerDetails);
        }
        _NavigationManager.NavigateTo("/");
    }
}
