@* Mainpage of the application which is rendered within Mainlayout and routed to by default, thus / *@
@using Models
@page "/"

<PageTitle>Nuclear Storage Manager</PageTitle> @* change title to project name *@

<table class="table table-striped table-bordered table-hover table align-middle">
    <thead class="table-dark">
        <tr>
            <th class="text-center">Id</th>
            <th class ="text-center">Name</th>
            <th class="text-center">Date / Time</th>
            <th class="text-center">Location</th>
            <th class="text-center">Container Type</th>
            <th class="text-center">Capacity</th>
            <th class="text-center">Current Level</th>
            <th class="text-center">Measurement Data</th>
        </tr>
     </thead>
     <tbody>
     @foreach (var container in containers)
     {
        <tr>
                <td class ="text-center">@container.Id</td>
                <td class="text-center">@container.Name</td>
                <td class="text-center">@container.DateTime</td>
                <td class="text-center">@container.Location</td>
                <td class="text-center">@container.ContainerType</td>
                <td class="text-center">@container.Capacity</td>
                <td class="text-center">@container.CurrentLevel</td>
                <td class="text-center">
                <ul>
                    @if (container.Measurements != null)
                    {
                        @foreach (var measurement in container.Measurements)
                        {
                            <li>@measurement</li>
                        }
                    }
                </ul>
            </td>
        </tr>
     }
     </tbody>
</table>

@code{
   
    private ContainerData[] containers = new ContainerData[]
    {
        new ContainerData { Id = 1, Name = $"Container {new Random().Next(0,200)}", DateTime = DateTime.Now, Location = "Gorleben", ContainerType = "Barrel", Capacity = 5000, CurrentLevel = new Random().Next(1000,5000), Measurements = new string[] { $"{DateTime.UtcNow}, Temperature: {new Random().Next(0,50)}C, RadioActivity: {new Random().Next(200,1000)}mSV" } },
        new ContainerData { Id = 2, Name = $"Container {new Random().Next(0,200)}", DateTime = DateTime.Now, Location = "Gorleben", ContainerType = "Barrel", Capacity = 5000, CurrentLevel = new Random().Next(1000,5000), Measurements = new string[] { $"{DateTime.UtcNow}, Temperature: {new Random().Next(0,50)}C, RadioActivity: {new Random().Next(200,1000)}mSV" } },
        new ContainerData { Id = 3, Name = $"Container {new Random().Next(0,200)}", DateTime = DateTime.Now, Location = "Gorleben", ContainerType = "Barrel", Capacity = 5000, CurrentLevel = new Random().Next(1000,5000), Measurements = new string[] { $"{DateTime.UtcNow}, Temperature: {new Random().Next(0,50)}C, RadioActivity: {new Random().Next(200,1000)}mSV" } },
        new ContainerData { Id = 4, Name = $"Container {new Random().Next(0,200)}", DateTime = DateTime.Now, Location = "Gorleben", ContainerType = "Barrel", Capacity = 5000, CurrentLevel = new Random().Next(1000,5000), Measurements = new string[] { $"{DateTime.UtcNow}, Temperature: {new Random().Next(0,50)}C, RadioActivity: {new Random().Next(200,1000)}mSV" } },
        new ContainerData { Id = 5, Name = $"Container {new Random().Next(0,200)}", DateTime = DateTime.Now, Location = "Gorleben", ContainerType = "Barrel", Capacity = 5000, CurrentLevel = new Random().Next(1000,5000), Measurements = new string[] { $"{DateTime.UtcNow}, Temperature: {new Random().Next(0,50)}C, RadioActivity: {new Random().Next(200,1000)}mSV" } }
    };
}
