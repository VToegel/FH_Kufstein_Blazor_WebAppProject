@* Mainpage of the application which is rendered within Mainlayout and routed to by default, thus / *@
@page "/"
@inject ContainerDataClient Client

<PageTitle>Nuclear Storage Manager</PageTitle> @* change title to project name *@

<div class="mt-2">
    <a class="btn btn-primary" role="button" href="/editcontainerdata">New Container</a>
</div>

@if (containers is null)
{
    <p><em>Loading...</em></p>
}
else
{

    <table class="table table-striped table-bordered table-hover table align-middle mt-3">
        <thead class="table-dark">
            <tr>
                <th class="text-center">Id</th>
                <th class="text-center">Name</th>
                <th class="text-center">Date / Time</th>
                <th class="text-center">Location</th>
                <th class="text-center">Container Type</th>
                <th class="text-center">Capacity</th>
                <th class="text-center">Current Level</th>
                <th class="text-center">Measurement Data</th>
                <th class="text-center" />
            </tr>
        </thead>
        <tbody>
            @foreach (var container in containers)
            {
                <tr>
                    <td class="text-center">@container.Id</td>
                    <td class="text-center">@container.Name</td>
                    <td class="text-center">@container.DateTime</td>
                    <td class="text-center">@container.Location</td>
                    <td class="text-center">@container.ContainerType</td>
                    <td class="text-center">@container.Capacity</td>
                    <td class="text-center">@container.CurrentLevel</td>
                    <td class="text-center">
                        <ul>
                            @if (container.Measurements != null)
                            {
                                @foreach (var measurement in container.Measurements)
                                {
                                    <li>@measurement</li>
                                }
                            }
                        </ul>
                    </td>
                    <td>
                        <div class="d-flex">
                            <a class="btn btn-primary me-2" role="button" href="@ContainerUrl(container.Id)">
                                <i class="bi bi-pencil"></i>
                            </a>
                            <a class="btn btn-danger" role="button" data-bs-toggle="modal" data-bs-target="@GetDeleteModalId(container)">
                                <i class="bi bi-trash"></i>
                            </a>
                        </div>
                        <DeleteContainer Container="@container" />
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    private ContainerData[]? containers;

    protected override void OnInitialized() /* override the OnInitialized Life Cycle method */
    {
        base.OnInitialized();
        containers = Client.GetContainerData();
    }

    private static string ContainerUrl(int id) => $"/editcontainerdata/{id}";

    private string GetDeleteModalId(ContainerData container) => $"#{DeleteContainer.GetModalId(container)}"; /* Get the modal id for the delete container modal */
}